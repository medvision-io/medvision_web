{"version":3,"sources":["webpack://medvision_web/./src/components/BannerModule/BannerModuleStyles.js","webpack://medvision_web/./src/components/BannerModule/BannerModule.js","webpack://medvision_web/./src/components/BannerModule/PageBanner.js","webpack://medvision_web/./src/components/Button/ButtonStyles.js","webpack://medvision_web/./src/components/Button/Button.js","webpack://medvision_web/./src/components/Products/Product.js","webpack://medvision_web/./src/components/Products/ProductsStyles.js","webpack://medvision_web/./src/components/Products/Products.js","webpack://medvision_web/./src/pages/products.js"],"names":["BannerModuleStyles","styled","props","compressed","children","title","subTitle","price","enquire","image","className","style","color","Button","text","as","Link","to","onClick","navigate","id","lightImage","darkImage","theme","useContext","SiteContext","type","StaticImage","THEMES","getImage","G","alt","ButtonStyles","marginLeft","product","slug","description","featuredImage","featuredImageDark","ProductsStyles","products","useStaticQuery","allMarkdownRemark","edges","map","node","Product","key","frontmatter","fields","UseSiteMetadata","productsPage","PageBanner","S","imgClassName","src","Products"],"mappings":"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","file":"component---src-pages-products-js-505bdbb23aa99c947c03.js","sourcesContent":["import styled from 'styled-components';\n\nexport const BannerModuleStyles = styled.section`\n  height: ${props => (props.compressed ? '300px' : '100vh')};\n  position: relative;\n  padding: 30px var(--borderSpacing);\n\n  .container {\n    height: 100%;\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-start;\n  }\n\n  .banner__image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 1;\n  }\n\n  .banner__content {\n    position: relative;\n    z-index: 2;\n    min-height: ${props => (props.compressed ? '100px' : '33vh')};\n    width: 100%;\n\n    @media (min-width: 768px) {\n      width: 66vw;\n      padding-left: ${props => (props.compressed ? '100px' : null)};\n    }\n\n    h1,\n    .price {\n      margin-top: 0;\n      margin-bottom: 10px;\n      font-weight: 700;\n      font-size: var(--bannerTitle);\n      letter-spacing: -1px;\n      margin-bottom: 30px;\n    }\n\n    h2 {\n      margin-top: 0;\n      margin-bottom: 30px;\n      font-weight: 300;\n      font-size: var(--bannerSubTitle);\n      letter-spacing: -0.5px;\n    }\n\n    button {\n      width: 30px;\n      height: 30px;\n      background-color: transparent;\n      border: none;\n      color: var(--fontColor);\n      font-size: 22px;\n      display: flex;\n      margin-top: 30px;\n    }\n  }\n`;\n","import React from \"react\"\nimport { Link, navigate } from \"gatsby\"\nimport { BannerModuleStyles } from \"./BannerModuleStyles\"\nimport { MdArrowDownward as Arrow } from \"react-icons/md\"\nimport Button from \"../Button/Button\"\n\nconst BannerModule = ({ children, title, subTitle, price, enquire, image, compressed }) => {\n  function scrollToArea() {\n    navigate(\"#topContent\")\n  }\n\n  return (\n    <>\n      <BannerModuleStyles compressed={compressed}>\n        {children ? (\n          children\n        ) : (\n          image\n        )}\n\n        <div className=\"container\">\n          <div className=\"banner__content\">\n            {title && (\n              <h1>\n                {title}\n                <span style={{ color: \"var(--primary)\" }}>.</span>\n              </h1>\n            )}\n            {subTitle && <h2>{subTitle}</h2>}\n            {price && (\n              <h2 className=\"price\">\n                Â£{price}\n                <span style={{ color: \"var(--primary)\" }}>.</span>\n              </h2>\n            )}\n            {enquire && <Button text=\"Enquire Now\" as={Link} to=\"/contact\" />}\n            <button onClick={scrollToArea}>\n              <Arrow />\n            </button>\n          </div>\n        </div>\n      </BannerModuleStyles>\n      <span id=\"topContent\"></span>\n    </>\n  )\n}\n\nexport default BannerModule\n","import React, { useContext } from \"react\"\nimport SiteContext, { THEMES } from \"../SiteContext\"\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\"\nimport BannerModule from \"./BannerModule\"\n\nconst PageBannerComponent = ({lightImage, darkImage, title, subTitle, compressed=false, enquire=false}) => {\n  const [theme] = useContext(SiteContext);\n  if (lightImage.type === StaticImage) {\n    return <BannerModule\n      title={title}\n      subTitle={subTitle}\n      compressed={compressed}\n      enquire={enquire}\n      image={theme === THEMES.dark ? darkImage : lightImage}\n    />\n  } else {\n    const image = getImage(theme === THEMES.dark ? darkImage : lightImage);\n    return <BannerModule\n      title={title}\n      subTitle={subTitle}\n      compressed={compressed}\n      enquire={enquire}\n      image={\n        <GatsbyImage\n          className=\"banner__image\"\n          image={image}\n          alt=\"Product Image\"\n        />\n      }\n    />\n  }\n}\n\nexport default PageBannerComponent","import styled from \"styled-components\"\n\nexport const ButtonStyles = styled.button`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  background-color: transparent;\n  color: var(--fontColor);\n  outline: none;\n  border: none;\n  padding: 0;\n  height: 36px;\n  line-height: 36px;\n  cursor: pointer;\n  font-weight: 700;\n  font-size: 15px;\n  font-family: \"Heebo\", sans-serif;\n  letter-spacing: -0.5px;\n  text-decoration: none;\n\n  svg {\n    font-size: 18px;\n  }\n\n  @media (min-width: 375px) {\n    font-size: 16px;\n  }\n\n  @media (min-width: 414px) {\n    font-size: 18px;\n\n    svg {\n      font-size: 20px;\n    }\n  }\n\n  @media (min-width: 768px) {\n    font-size: 19px;\n  }\n\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 2px;\n    background-color: var(--primary);\n    transition: width 0.3s ease;\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--fontColor);\n\n    &:after {\n      width: 0%;\n    }\n  }\n`\n","import React from \"react\"\nimport { MdArrowForward as Arrow } from \"react-icons/md\"\nimport { ButtonStyles } from \"./ButtonStyles\"\n\nconst Button = ({ text, to, as }) => {\n  return (\n    <ButtonStyles as={as} to={to}>\n      {text}\n      <Arrow style={{ marginLeft: \"10px\" }} />\n    </ButtonStyles>\n  )\n}\n\nexport default Button\n","import React, { useContext } from \"react\"\nimport { Link } from 'gatsby';\nimport Button from '../Button/Button';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport SiteContext, { THEMES } from \"../SiteContext\"\n\nconst Product = ({ product, slug }) => {\n  const [theme] = useContext(SiteContext);\n  const { title, description, featuredImage, featuredImageDark } = product;\n  const image = getImage(theme === THEMES.dark ? featuredImageDark : featuredImage);\n\n  return (\n    <aside className=\"features__item\">\n      <Link to={`/products/${slug}`}>\n        <GatsbyImage\n          className=\"features__item--img\"\n          image={image}\n          alt=\"Product Image\"\n        />\n        <div className=\"features__item--content\">\n          {title && <h2>{title}</h2>}\n          {description && <p>{description}</p>}\n          <Button text=\"Read More\" as=\"span\" />\n        </div>\n      </Link>\n    </aside>\n  );\n};\n\nexport default Product;\n","import styled from \"styled-components\"\n\nexport const ProductsStyles = styled.section`\n  padding: var(--sectionPadding) var(--borderSpacing);\n  color: var(--fontColor);\n  background-color: var(--background);\n\n  .features__container {\n    width: calc(100% + 60px);\n    transform: translateX(-30px);\n    /* max-width: 1230px; */\n    margin-left: auto;\n    margin-right: auto;\n\n    @media (min-width: 1024px) {\n      width: calc(100% + 150px);\n      transform: translateX(-75px);\n    }\n\n    @media (min-width: 1152px) {\n      width: 100%;\n      transform: translateX(0);\n    }\n\n    &--scroll {\n      overflow-x: scroll;\n      display: flex;\n      scroll-snap-type: x mandatory;\n\n      &::-webkit-scrollbar {\n        width: 14px;\n        height: 14px;\n      }\n      &::-webkit-scrollbar-thumb {\n        background: var(--primary);\n        border-radius: 0px;\n      }\n      &::-webkit-scrollbar-thumb:hover {\n        background: var(--primary);\n      }\n      &::-webkit-scrollbar-track {\n        background: #505050;\n        border-radius: 0px;\n      }\n\n      @media (min-width: 1152px) {\n        overflow-x: visible;\n        flex-wrap: wrap;\n        justify-content: space-between;\n      }\n    }\n  }\n\n  .features__item {\n    flex: 0 0 80%;\n    min-height: 408px;\n    background-color: var(--background);\n    margin-right: 8px;\n    margin-left: 8px;\n    overflow: hidden;\n    scroll-snap-align: start;\n    scroll-margin-left: 25px;\n\n    @media (min-width: 414px) {\n      min-height: 434px;\n    }\n\n    @media (min-width: 768px) {\n      min-height: 500px;\n    }\n\n    @media (min-width: 1024px) {\n      min-height: 600px;\n    }\n\n    @media (min-width: 1152px) {\n      min-height: 500px;\n    }\n\n    &:hover,\n    &:focus {\n      cursor: pointer;\n\n      h2,\n      p {\n        color: var(--fontColor);\n      }\n\n      .features__item--img {\n        transform: scale(1.1);\n      }\n    }\n\n    > a {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      align-items: flex-end;\n      position: relative;\n      text-decoration: none;\n    }\n\n    &--img {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      transition: transform 0.3s ease;\n    }\n\n    &--content {\n      width: 100%;\n      position: relative;\n      z-index: 2;\n      padding: 20px;\n      background: linear-gradient(\n        0deg,\n        rgba(var(--background), 1) 0%,\n        rgba(var(--background), 0) 100%\n      );\n\n      > * {\n        &:first-child {\n          margin-top: 0;\n        }\n\n        &:last-child {\n          margin-bottom: 0;\n        }\n      }\n\n      > h2 {\n        color: var(--fontColor);\n        font-size: var(--h2);\n        margin-bottom: 20px;\n      }\n\n      > p {\n        color: var(--fontColor);\n        font-size: var(--p);\n        margin-bottom: 40px;\n      }\n    }\n\n    @media (min-width: 414px) {\n      min-height: 434px;\n    }\n\n    @media (min-width: 768px) {\n      flex-basis: 65%;\n      min-height: 500px;\n      margin-left: 15px;\n      margin-right: 15px;\n    }\n\n    @media (min-width: 1024px) {\n      flex-basis: 60%;\n      min-height: 500px;\n      margin-left: 20px;\n      margin-right: 20px;\n    }\n\n    @media (min-width: 1152px) {\n      flex: 0 0 calc((100% / 3) - 27px);\n      margin-bottom: 40px;\n      scroll-margin-left: 0;\n\n      &:nth-of-type(3n + 0) {\n        margin-right: 0;\n      }\n    }\n\n    &:nth-child(1) {\n      margin-left: 30px;\n\n      @media (min-width: 1024px) {\n        margin-left: 75px;\n      }\n\n      @media (min-width: 1152px) {\n        margin-left: 0;\n      }\n    }\n\n    &:last-child {\n      position: relative;\n\n      &:after {\n        content: \"\";\n        position: absolute;\n        width: 30px;\n        height: 30px;\n        background-color: transparent;\n        right: -30px;\n        bottom: 0;\n\n        @media (min-width: 1024px) {\n          right: -75px;\n          width: 75px;\n        }\n\n        @media (min-width: 1152px) {\n          display: none;\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { ProductsStyles } from \"./ProductsStyles\"\nimport Product from \"./Product\"\n\nconst getProducts = graphql`\n  query Products {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { draft: { eq: false }, template: { eq: \"product\" } }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            featuredImage {\n              childImageSharp {\n                 gatsbyImageData(\n                   width: 600\n                   placeholder: BLURRED\n                   formats: [AUTO, WEBP, AVIF]\n                 )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Features = () => {\n  const response = useStaticQuery(getProducts)\n  const products = response.allMarkdownRemark.edges\n\n  return (\n    <ProductsStyles>\n      <div className=\"features__container\">\n        <div className=\"features__container--scroll\">\n          {products.map(({ node }) => {\n            return <Product key={node.frontmatter.title} product={node.frontmatter} slug={node.fields.slug} />\n          })}\n        </div>\n      </div>\n    </ProductsStyles>\n  )\n}\n\nexport default Features\n","import React  from 'react';\nimport Products from '../components/Products/Products';\nimport Seo from '../components/SEO';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { UseSiteMetadata } from '../hooks/useSiteMetadata';\nimport PageBannerComponent from '../components/BannerModule/PageBanner';\n\nconst products = () => {\n  const {\n    productsPage: { title, subTitle },\n  } = UseSiteMetadata();\n  return (\n    <>\n      <Seo title=\"Products\" />\n\n      <PageBannerComponent\n        lightImage={\n          <StaticImage\n            className=\"banner__image\"\n            imgClassName=\"banner__image--content\"\n            src=\"../../images/products-light.jpg\"\n            alt=\"Hero image\"\n          />\n        }\n        darkImage={\n          <StaticImage\n            className=\"banner__image\"\n            imgClassName=\"banner__image--content\"\n            src=\"../../images/products.jpg\"\n            alt=\"Hero image\"\n          />\n        }\n        title={title}\n        subTitle={subTitle}\n        compressed={true}\n      />\n      <Products />\n    </>\n  );\n};\n\nexport default products;\n"],"sourceRoot":""}