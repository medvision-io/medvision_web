{"version":3,"sources":["webpack://zhivaai_web/./src/components/MediaLogos/MediaLogosStyles.js","webpack://zhivaai_web/./src/components/MediaLogos/MediaLogos.js","webpack://zhivaai_web/./src/pages/media.js"],"names":["MediaLogosStyles","styled","LogoItem","name","url","variant","className","href","target","rel","aria-label","xmlns","aria-hidden","role","width","height","preserveAspectRatio","viewBox","fill","d","src","alt","loading","children","title","UseSiteMetadata","mediaPage"],"mappings":"8LAEaA,E,QAAmBC,sBAAH,wDAAGA,CAAH,utCCCvBC,EAAW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,IAA6B,IAAxBC,eAAwB,MAAd,QAAc,EACrD,OACE,uBAAKC,UAAW,cAA4B,SAAZD,EAAqB,oBAAsB,MACzE,uBAAKC,UAAW,sBACd,4BAAOH,GACP,qBACEI,KAAMH,EACNI,OAAO,SACPC,IAAI,+BACJC,aAAA,iBAA6BP,GAE7B,uBAAKQ,MAAM,6BAA6BC,cAAY,OAAOC,KAAK,MAAMC,MAAM,QAAQC,OAAO,QAAQC,oBAAoB,gBAAgBC,QAAQ,iBAAgB,wBAAMC,KAAK,eAAeC,EAAE,kHAG/L,uBAAKC,IAAKhB,EAAKiB,IAAG,QAAUlB,EAAQmB,QAAQ,WAkClD,EA7BmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACE,gBAACvB,EAAD,KACGuB,EACD,uBAAKjB,UAAW,SACd,0CACA,gBAACJ,EAAD,CAAUC,KAAM,QAASC,IAAK,qBAC9B,gBAACF,EAAD,CAAUC,KAAM,SAAUC,IAAK,wBAC/B,gBAACF,EAAD,CAAUC,KAAM,mBAAoBC,IAAK,8BACzC,gBAACF,EAAD,CAAUC,KAAM,iBAAkBC,IAAK,8BAEzC,uBAAKE,UAAW,SACd,yCACA,gBAACJ,EAAD,CAAUC,KAAM,QAASC,IAAK,2BAC9B,gBAACF,EAAD,CAAUC,KAAM,SAAUC,IAAK,8BAC/B,gBAACF,EAAD,CAAUC,KAAM,mBAAoBC,IAAK,oCACzC,gBAACF,EAAD,CAAUC,KAAM,iBAAkBC,IAAK,oCAEzC,uBAAKE,UAAW,SACd,6DACA,gBAACJ,EAAD,CAAUG,QAAS,OAAQF,KAAM,QAASC,IAAK,oCAC/C,gBAACF,EAAD,CAAUG,QAAS,OAASF,KAAM,SAAUC,IAAK,uCACjD,gBAACF,EAAD,CAAUG,QAAS,OAASF,KAAM,mBAAoBC,IAAK,6CAC3D,gBAACF,EAAD,CAAUG,QAAS,OAASF,KAAM,iBAAkBC,IAAK,+CC1BjE,EAdc,WAAO,IAEJoB,GACXC,SADFC,UAAaF,MAEf,OACE,gCACE,gBAAC,IAAD,CAAKA,MAAOA,IACZ,gBAAC,EAAD,KACE,0BAAKA","file":"component---src-pages-media-js-2385390dbe39fc63fa72.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const MediaLogosStyles = styled.section`\n  padding: var(--sectionPadding) var(--borderSpacing);\n  max-width: 1050px;\n  box-sizing: content-box;\n  margin: 0 auto;\n\n\n  .logos {\n    display: grid;\n    grid-template-columns: auto auto;\n    gap: 12px 12px;\n    \n    h3 {\n      grid-column: 1;\n      grid-column-end: 3;\n    }\n    \n    .logos-item {\n      display: flex;\n      flex-direction: row;\n      align-content: center;\n      position: relative;\n      min-width: 100%;\n      max-width: 100%;\n      height: 200px;\n      margin-bottom: 24px;\n      transition: transform 0.3s ease;\n      background-color: white;\n      box-shadow: var(--elevation2);\n      grid-column: span 2;\n      \n      @media (min-width: 414px) {\n        min-width: 434px;\n      }\n\n      @media (min-width: 768px) {\n        min-width: 350px;\n        grid-column: span 1;\n      }\n\n      @media (min-width: 1024px) {\n        min-width: 400px;\n      }\n\n      @media (min-width: 1152px) {\n        min-width: 500px;\n      }\n      \n      span {\n        //position: absolute;\n        font-weight: bold;\n        color: transparent;\n        text-align: center;\n        font-size: var(--h3);\n        z-index: 1;\n      }\n      a {\n        display: none;\n        margin-top: 8px;\n        text-align: center;\n      }\n      \n      .logos-item-overlay {\n        z-index: 1;\n        display: flex;\n        flex-direction: column;\n        align-content: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n      }\n      \n      &:hover,\n      &:focus {\n        h2,\n        span {\n          color: var(--lightFontColor);\n        }\n        a {\n          display: block;\n        }\n\n        .logos-item-overlay {\n          background-color: rgba(0,0,0,0.6);\n        }\n        \n      }\n      img {\n        position: absolute;\n        max-height: 100%;\n        margin: auto;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        z-index: 0;\n        max-width: 100%;\n      }\n      \n      &__dark {\n        background-color: black;\n        &:hover,\n        &:focus {\n          h2,\n          span {\n            color: var(--lightFontColor);\n          }\n\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { MediaLogosStyles } from './MediaLogosStyles';\n\nconst LogoItem = ({ name, url, variant = 'light' }) => {\n  return (\n    <div className={'logos-item' + (variant === 'dark' ? ' logos-item__dark' : ' ')}>\n      <div className={\"logos-item-overlay\"}>\n        <span>{name}</span>\n        <a\n          href={url}\n          target=\"_blank\"\n          rel=\"nofollow noreferrer noopener\"\n          aria-label={`download logo ${name}`}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1200 1200\"><path fill=\"currentColor\" d=\"M0 1037.516h1200V1200H0v-162.484zM820.785 0h-441.57v496.632H103.233L600 959.265l496.768-462.633H820.785V0z\"/></svg>\n        </a>\n      </div>\n      <img src={url} alt={`Logo ${name}`} loading=\"lazy\"/>\n    </div>\n  );\n};\n\nconst MediaLogos = ({ children }) => {\n  return (\n    <MediaLogosStyles>\n      {children}\n      <div className={'logos'}>\n        <h3>Default logo</h3>\n        <LogoItem name={\"Basic\"} url={\"/media/zhiva.png\"} />\n        <LogoItem name={\"Square\"} url={\"/media/zhiva_sq.png\"} />\n        <LogoItem name={\"Width text (rec)\"} url={\"/media/zhiva_rec_text.png\"} />\n        <LogoItem name={\"With text (sq)\"} url={\"/media/zhiva_sq_text.png\"} />\n      </div>\n      <div className={'logos'}>\n        <h3>Bright logo</h3>\n        <LogoItem name={\"Basic\"} url={\"/media/zhiva_light.png\"} />\n        <LogoItem name={\"Square\"} url={\"/media/zhiva_light_sq.png\"} />\n        <LogoItem name={\"Width text (rec)\"} url={\"/media/zhiva_light_rec_text.png\"} />\n        <LogoItem name={\"With text (sq)\"} url={\"/media/zhiva_light_sq_text.png\"} />\n      </div>\n      <div className={'logos'}>\n        <h3>Bright logo on black background</h3>\n        <LogoItem variant={\"dark\"} name={\"Basic\"} url={\"/media/zhiva_light_black_bg.svg\"} />\n        <LogoItem variant={\"dark\"}  name={\"Square\"} url={\"/media/zhiva_light_sq_black_bg.png\"} />\n        <LogoItem variant={\"dark\"}  name={\"Width text (rec)\"} url={\"/media/zhiva_light_rec_text_black_bg.png\"} />\n        <LogoItem variant={\"dark\"}  name={\"With text (sq)\"} url={\"/media/zhiva_light_sq_text_black_bg.png\"} />\n      </div>\n    </MediaLogosStyles>\n  );\n};\n\nexport default MediaLogos;\n","import React from 'react';\nimport Seo from '../components/SEO';\nimport { UseSiteMetadata } from '../hooks/useSiteMetadata';\nimport MediaLogos from \"../components/MediaLogos/MediaLogos\"\n\nconst media = () => {\n  const {\n    mediaPage: { title },\n  } = UseSiteMetadata();\n  return (\n    <>\n      <Seo title={title} />\n      <MediaLogos>\n        <h2>{title}</h2>\n      </MediaLogos>\n    </>\n  );\n};\n\nexport default media;\n"],"sourceRoot":""}